name: Develop Branch CI/CD

on:
  push:
    branches: [ develop ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy-spring:
    name: Build and Deploy Spring to Staging
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./spring
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Java 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('spring/**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Generate RC version
      id: version
      run: |
        # Get the current version from pom.xml and create RC version
        CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')
        RC_VERSION="${CURRENT_VERSION}-RC.${{ github.run_number }}"
        echo "version=${RC_VERSION}" >> $GITHUB_OUTPUT
        echo "Generated RC version: ${RC_VERSION}"

    - name: Update version in pom.xml
      run: |
        mvn versions:set -DnewVersion=${{ steps.version.outputs.version }} -DgenerateBackupPoms=false

    - name: Run tests
      run: |
        mvn clean test
        mvn failsafe:integration-test failsafe:verify -Dtest=none -DfailIfNoTests=false

    - name: Build application
      run: mvn clean package -DskipTests

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-spring
        tags: |
          type=raw,value=develop
          type=raw,value=${{ steps.version.outputs.version }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./spring
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Create pre-release
      uses: release-drafter/release-drafter@v5
      with:
        config-name: release-drafter.yml
        version: ${{ steps.version.outputs.version }}
        tag: spring-${{ steps.version.outputs.version }}
        prerelease: true
        publish: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
