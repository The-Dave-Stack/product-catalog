name: Pull Request Validation

on:
  pull_request:
    branches: [ main, develop, integration ]
    paths:
      - 'src/**'
      - 'pom.xml'
      - 'docker-compose*.yml'
      - 'nginx/**'
      - '.env*.example'
      - '.github/workflows/*.yml'

jobs:
  validate:
    name: Validate Spring Boot Implementation
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Validate environment configurations
      run: |
        # Validate all Docker Compose files
        echo "Validating Docker Compose configurations..."
        docker compose -f docker-compose.local.yml config
        docker compose -f docker-compose.stage.yml config  
        docker compose -f docker-compose.prod.yml config
        
        # Check all environment property files exist
        echo "Checking application property files..."
        test -f src/main/resources/application-local.properties
        test -f src/main/resources/application-stage.properties
        test -f src/main/resources/application-prod.properties
        
        # Validate nginx configurations
        echo "Checking nginx configurations..."
        test -f nginx/nginx.conf
        test -f nginx/nginx-stage.conf
        test -f nginx/nginx-prod.conf
        
        # Check environment example files
        echo "Checking environment example files..."
        test -f .env.local.example
        test -f .env.stage.example
        test -f .env.prod.example

    - name: Run code formatting check
      run: mvn spotless:check

    - name: Run unit tests with different profiles
      run: |
        echo "Testing with local profile..."
        mvn clean test -Dspring.profiles.active=local
        echo "Testing with stage profile..."
        mvn test -Dspring.profiles.active=stage
        echo "Testing with prod profile..."
        mvn test -Dspring.profiles.active=prod

    - name: Run integration tests
      run: mvn failsafe:integration-test failsafe:verify -Dtest=none -DfailIfNoTests=false -Dspring.profiles.active=local

    - name: Build application
      run: mvn clean package -DskipTests

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          target/surefire-reports/
          target/failsafe-reports/
