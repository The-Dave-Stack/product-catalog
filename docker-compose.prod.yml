services:
  postgres-db:
    image: postgres:17.5-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DATABASE_NAME:-product_catalog}
      - POSTGRES_USER=${DATABASE_USERNAME:-user}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-password}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME:-user} -d ${DATABASE_NAME:-product_catalog}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network
    # Security: Don't expose database port in production
    # ports:
    #   - "5432:5432"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  product-catalog:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "${APP_PORT:-8080}:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod,docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/${DATABASE_NAME:-product_catalog}
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME:-user}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD:-password}
      - JWT_SECRET=${JWT_SECRET:-changeme-production-secret-key-must-be-at-least-256-bits}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-86400}
      - JAVA_OPTS=-Xmx768m -Xms384m -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0
    depends_on:
      postgres-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 90s
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '2.0'
        reservations:
          memory: 512M
          cpus: '1.0'
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3

  # Optional: Reverse proxy for production
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - product-catalog
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.5'
        reservations:
          memory: 64M
          cpus: '0.1'
    profiles:
      - nginx

volumes:
  postgres_prod_data:
    driver: local

networks:
  app-network:
    driver: bridge