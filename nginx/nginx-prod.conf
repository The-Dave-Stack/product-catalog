events {
    worker_connections 1024;
}

http {
    upstream product-catalog {
        server product-catalog:8080;
    }

    # Enhanced rate limiting for production
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=mcp:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    # Security headers (enhanced for production)
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:;" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), accelerometer=(), gyroscope=(), magnetometer=()" always;

    # Hide nginx version
    server_tokens off;

    # Request size limits
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    server {
        listen 80;
        server_name _;

        # Redirect HTTP to HTTPS in production
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name _;

        # SSL Configuration (customize for your certificates)
        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Health check endpoint (no auth required)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Authentication endpoints with rate limiting
        location /api/v1/auth/ {
            limit_req zone=auth burst=10 nodelay;
            proxy_pass http://product-catalog;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Standard timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # API endpoints with enhanced security
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://product-catalog;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Enhanced security headers for API
            add_header X-API-Version "1.0" always;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
            
            # Standard timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # MCP Server SSE endpoint with enhanced production security
        location /sse {
            # Stricter rate limiting for MCP connections
            limit_req zone=mcp burst=5 nodelay;
            
            # Authentication validation (JWT required)
            # This ensures only authenticated clients can access MCP
            proxy_pass http://product-catalog;
            
            # SSE-specific headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            
            # SSE requires no buffering
            proxy_buffering off;
            proxy_cache off;
            
            # Extended timeout for persistent MCP connections (4 hours max)
            proxy_read_timeout 14400s;
            proxy_send_timeout 14400s;
            proxy_connect_timeout 30s;
            
            # Restrictive CORS for production (customize for your MCP clients)
            add_header Access-Control-Allow-Origin "https://claude.ai" always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;
            add_header Access-Control-Expose-Headers "Content-Type, Cache-Control" always;
            add_header Access-Control-Allow-Credentials "true" always;
            
            # Enhanced security for MCP endpoint
            add_header X-MCP-Server "product-catalog-v2.0" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Frame-Options "DENY" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "https://claude.ai";
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept";
                add_header Access-Control-Max-Age 3600;
                add_header Content-Type text/plain;
                add_header Content-Length 0;
                return 204;
            }
        }

        # Swagger UI (restrict in production - consider IP whitelist)
        location /swagger-ui/ {
            # Optional: Restrict to internal networks only
            # allow 10.0.0.0/8;
            # allow 172.16.0.0/12;
            # allow 192.168.0.0/16;
            # deny all;
            
            proxy_pass http://product-catalog;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /v3/api-docs {
            # Optional: Restrict to internal networks only
            # allow 10.0.0.0/8;
            # allow 172.16.0.0/12;
            # allow 192.168.0.0/16;
            # deny all;
            
            proxy_pass http://product-catalog;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint (authenticated)
        location /actuator/health {
            proxy_pass http://product-catalog;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Additional actuator endpoints (restrict access)
        location ~ ^/actuator/(info|metrics|productmetrics|audit) {
            # Restrict to internal networks only
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            proxy_pass http://product-catalog;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Security: Block common attack patterns
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Default response for other requests
        location / {
            return 404 '{"error": "Not Found", "message": "API endpoint not found. Check /swagger-ui/ for documentation.", "timestamp": "$time_iso8601"}';
            add_header Content-Type application/json;
        }
    }
}